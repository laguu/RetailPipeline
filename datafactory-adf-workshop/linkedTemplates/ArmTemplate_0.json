{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-adf-workshop"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"MySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MySql1'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"OnPremiseDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremiseDB'"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfworkshop2022lagu.dfs.core.windows.net/"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\LAGUU-DESKTOP\\Project"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "koskelaa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('MySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHosted-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CFG_EDWDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "Source_Table",
						"type": "varchar"
					},
					{
						"name": "Dest_Table",
						"type": "varchar"
					},
					{
						"name": "Columns",
						"type": "varchar"
					},
					{
						"name": "Watermark_Column",
						"type": "varchar"
					},
					{
						"name": "Watermark_Value",
						"type": "varchar"
					},
					{
						"name": "Enabled",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Load_flag",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cfg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerCSVDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customer.csv",
						"fileSystem": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "dob",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "city_code",
						"type": "String"
					},
					{
						"name": "customer_name",
						"type": "String"
					},
					{
						"name": "created_modified_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "varchar"
					},
					{
						"name": "city_code",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "FullDateUK",
						"type": "char"
					},
					{
						"name": "FullDateUSA",
						"type": "char"
					},
					{
						"name": "DayOfMonth",
						"type": "varchar"
					},
					{
						"name": "DaySuffix",
						"type": "varchar"
					},
					{
						"name": "DayName",
						"type": "varchar"
					},
					{
						"name": "DayOfWeekUSA",
						"type": "char"
					},
					{
						"name": "DayOfWeekUK",
						"type": "char"
					},
					{
						"name": "DayOfWeekInMonth",
						"type": "varchar"
					},
					{
						"name": "DayOfWeekInYear",
						"type": "varchar"
					},
					{
						"name": "DayOfQuarter",
						"type": "varchar"
					},
					{
						"name": "DayOfYear",
						"type": "varchar"
					},
					{
						"name": "WeekOfMonth",
						"type": "varchar"
					},
					{
						"name": "WeekOfQuarter",
						"type": "varchar"
					},
					{
						"name": "WeekOfYear",
						"type": "varchar"
					},
					{
						"name": "Month",
						"type": "varchar"
					},
					{
						"name": "MonthName",
						"type": "varchar"
					},
					{
						"name": "MonthOfQuarter",
						"type": "varchar"
					},
					{
						"name": "Quarter",
						"type": "char"
					},
					{
						"name": "QuarterName",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "char"
					},
					{
						"name": "YearName",
						"type": "char"
					},
					{
						"name": "MonthYear",
						"type": "char"
					},
					{
						"name": "MMYYYY",
						"type": "char"
					},
					{
						"name": "FirstDayOfMonth",
						"type": "date"
					},
					{
						"name": "LastDayOfMonth",
						"type": "date"
					},
					{
						"name": "FirstDayOfQuarter",
						"type": "date"
					},
					{
						"name": "LastDayOfQuarter",
						"type": "date"
					},
					{
						"name": "FirstDayOfYear",
						"type": "date"
					},
					{
						"name": "LastDayOfYear",
						"type": "date"
					},
					{
						"name": "IsHolidayUSA",
						"type": "bit"
					},
					{
						"name": "IsWeekday",
						"type": "bit"
					},
					{
						"name": "HolidayUSA",
						"type": "varchar"
					},
					{
						"name": "IsHolidayUK",
						"type": "bit"
					},
					{
						"name": "HolidayUK",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProdCatSubCat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Prod_Cat_SubCat_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product_Cat_Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product_Category",
						"type": "varchar"
					},
					{
						"name": "Product_SubCat_Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product_SubCategory",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_product_Cat_SubCat"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Store_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Store_Type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Store"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactTransaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Fact_Tran_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Prod_Cat_SubCat_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Store_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tran_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tax",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_amount",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Fact_Transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdCatSubCatCSVDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Product_Category_Subcategory.csv",
						"fileSystem": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "prod_cat_code",
						"type": "String"
					},
					{
						"name": "prod_cat",
						"type": "String"
					},
					{
						"name": "prod_sub_cat_code",
						"type": "String"
					},
					{
						"name": "prod_subcat",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductSubcategoryCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "005 Product-Category-Subcategory.csv",
						"fileSystem": "misc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "prod_cat_code",
						"type": "String"
					},
					{
						"name": "prod_cat",
						"type": "String"
					},
					{
						"name": "prod_sub_cat_code",
						"type": "String"
					},
					{
						"name": "prod_subcat",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions.csv",
						"fileSystem": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "cust_id",
						"type": "String"
					},
					{
						"name": "tran_date",
						"type": "String"
					},
					{
						"name": "prod_subcat_code",
						"type": "String"
					},
					{
						"name": "prod_cat_code",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "rate",
						"type": "String"
					},
					{
						"name": "tax",
						"type": "String"
					},
					{
						"name": "total_amt",
						"type": "String"
					},
					{
						"name": "store_type",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"STGfilename": {
						"type": "string",
						"defaultValue": "demo"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().STGfilename",
							"type": "Expression"
						},
						"fileSystem": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHosted-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHosted-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('OnPremiseDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHosted-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHosted-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerSourceTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremiseDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremiseDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransactionSourceTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremiseDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremiseDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact Transaction')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_Transactions",
								"type": "DatasetReference"
							},
							"name": "STGTransaction"
						},
						{
							"dataset": {
								"referenceName": "DimCustomer",
								"type": "DatasetReference"
							},
							"name": "dimcustomer"
						},
						{
							"dataset": {
								"referenceName": "DimStore",
								"type": "DatasetReference"
							},
							"name": "dimstore"
						},
						{
							"dataset": {
								"referenceName": "DimProdCatSubCat",
								"type": "DatasetReference"
							},
							"name": "dimprodcatsubcat"
						},
						{
							"dataset": {
								"referenceName": "DimDate",
								"type": "DatasetReference"
							},
							"name": "dimdate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactTransaction",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "JoinDimCustomer"
						},
						{
							"name": "JoinDimProdCat"
						},
						{
							"name": "JoinDimDate"
						},
						{
							"name": "JoinDimStore"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          transaction_id as string,",
						"          cust_id as integer,",
						"          tran_date as date,",
						"          prod_subcat_code as string,",
						"          prod_cat_code as string,",
						"          qty as string,",
						"          rate as string,",
						"          tax as string,",
						"          total_amt as string,",
						"          store_type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> STGTransaction",
						"source(output(",
						"          customer_key as integer,",
						"          customer_Id as integer,",
						"          customer_name as string,",
						"          DOB as string,",
						"          city_code as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dimcustomer",
						"source(output(",
						"          Store_Key as integer,",
						"          Store_Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dimstore",
						"source(output(",
						"          Prod_Cat_SubCat_Key as integer,",
						"          Product_Cat_Code as integer,",
						"          Product_Category as string,",
						"          Product_SubCat_Code as integer,",
						"          Product_SubCategory as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dimprodcatsubcat",
						"source(output(",
						"          DateKey as integer,",
						"          Date as date,",
						"          FullDateUK as string,",
						"          FullDateUSA as string,",
						"          DayOfMonth as string,",
						"          DaySuffix as string,",
						"          DayName as string,",
						"          DayOfWeekUSA as string,",
						"          DayOfWeekUK as string,",
						"          DayOfWeekInMonth as string,",
						"          DayOfWeekInYear as string,",
						"          DayOfQuarter as string,",
						"          DayOfYear as string,",
						"          WeekOfMonth as string,",
						"          WeekOfQuarter as string,",
						"          WeekOfYear as string,",
						"          Month as string,",
						"          MonthName as string,",
						"          MonthOfQuarter as string,",
						"          Quarter as string,",
						"          QuarterName as string,",
						"          Year as string,",
						"          YearName as string,",
						"          MonthYear as string,",
						"          MMYYYY as string,",
						"          FirstDayOfMonth as date,",
						"          LastDayOfMonth as date,",
						"          FirstDayOfQuarter as date,",
						"          LastDayOfQuarter as date,",
						"          FirstDayOfYear as date,",
						"          LastDayOfYear as date,",
						"          IsHolidayUSA as boolean,",
						"          IsWeekday as boolean,",
						"          HolidayUSA as string,",
						"          IsHolidayUK as boolean,",
						"          HolidayUK as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dimdate",
						"STGTransaction, dimcustomer join(cust_id == customer_Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinDimCustomer",
						"JoinDimCustomer, dimprodcatsubcat join(toInteger(prod_cat_code) == Product_Cat_Code",
						"     && toInteger(prod_subcat_code) == Product_SubCat_Code,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinDimProdCat",
						"JoinDimProdCat, dimdate join(tran_date == Date,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinDimDate",
						"JoinDimDate, dimstore join(STGTransaction@store_type == dimstore@Store_Type,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinDimStore",
						"JoinDimStore derive(quantity_int = toInteger(qty),",
						"          rate_float = toFloat(rate),",
						"          tax_float = toFloat(tax),",
						"          total_amt_float = toFloat(total_amt)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Fact_Tran_Key as integer,",
						"          customer_key as integer,",
						"          Prod_Cat_SubCat_Key as integer,",
						"          Store_Key as integer,",
						"          tran_date as integer,",
						"          Quantity as integer,",
						"          rate as double,",
						"          tax as double,",
						"          total_amount as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          customer_key,",
						"          Prod_Cat_SubCat_Key,",
						"          Store_Key,",
						"          tran_date = DateKey,",
						"          Quantity = quantity_int,",
						"          rate = rate_float,",
						"          tax = tax_float,",
						"          total_amount = total_amt_float",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_Transactions')]",
				"[concat(variables('factoryId'), '/datasets/DimCustomer')]",
				"[concat(variables('factoryId'), '/datasets/DimStore')]",
				"[concat(variables('factoryId'), '/datasets/DimProdCatSubCat')]",
				"[concat(variables('factoryId'), '/datasets/DimDate')]",
				"[concat(variables('factoryId'), '/datasets/FactTransaction')]"
			]
		}
	]
}